import{_ as e,o as l,c as a,e as t}from"./app-5e6e879c.js";const i={},r=t('<h3 id="babel" tabindex="-1"><a class="header-anchor" href="#babel" aria-hidden="true">#</a> babel</h3><p>js 编译器, 按需转换代码, 将ts jsx 或新的语言特性 转换为想要的js代码</p><p>原理: 先转换为 AST, 对 AST 应用各种插件进行处理， 最终输出编译后的js代码</p><p><em>解析步骤</em></p><ol><li><p>解析 parse : 将输入的代码 通过babylon 进行解析 得到 AST</p><ul><li>解析过程： <ul><li>词法分析 字符串-&gt; token（类似于AST中的节点）</li><li>语法分析 token -&gt; AST</li></ul></li></ul></li><li><p>转译 transform : 通过 plugin babel-traverse 对 AST 树进行深度优先遍历 转译 得到新的 AST 树</p></li><li><p>生成 generate : 通过 babel-generator 将 AST 转换成新的 js 代码, 深度遍历整个 AST</p></li></ol>',5),s=[r];function o(n,c){return l(),a("div",null,s)}const b=e(i,[["render",o],["__file","babel.html.vue"]]);export{b as default};
