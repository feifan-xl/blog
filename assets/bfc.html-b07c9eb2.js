import{_ as i,o as a,c as t,f as o,a as e,b as l,e as n}from"./app-5e6e879c.js";const c={},r=e("h3",{id:"bfc",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#bfc","aria-hidden":"true"},"#"),l(" BFC")],-1),s=e("p",null,[l("块级格式化上下文"),e("br"),l(" 指页面上的一个隔离的渲染区域，容器里面的子元素不会在布局上 影响外面的元素")],-1),d=e("h3",{id:"使用场景",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#使用场景","aria-hidden":"true"},"#"),l(" 使用场景")],-1),f=e("ul",null,[e("li",null,"去除浮动"),e("li",null,"自适应布局")],-1),h=n('<h3 id="布局规则及触发条件" tabindex="-1"><a class="header-anchor" href="#布局规则及触发条件" aria-hidden="true">#</a> 布局规则及触发条件</h3><p>bfc 布局规则:</p><ul><li>内部的box会垂直方向，一个接一个地放置</li><li>box 垂直方向距离由margin决定，同一个bfc的两个相邻box的margin会发生重叠</li><li>bfc区域不会与float box 重叠 -&gt; (自适应两栏布局)</li><li>BFC就是页面上的一个隔离的独立容器，容器里面的子元素不会影响到外面的元素。反之也如此。-&gt; 清除浮动</li><li>计算BFC的高度时，浮动元素也参与计算。</li></ul><p><em>创建bfc</em></p><ol><li>float的值不是none。</li><li>position的值不是static或者relative。</li><li>display的值是inline-block、table-cell、flex、table-caption或者inline-flex</li><li>overflow的值不是visibl</li></ol>',5);function _(b,u){return a(),t("div",null,[r,s,d,f,o(` 修复浮动元素造成的高度塌陷问题。
  避免非期望的外边距折叠。
  实现灵活健壮的自适应布局。 `),h])}const m=i(c,[["render",_],["__file","bfc.html.vue"]]);export{m as default};
