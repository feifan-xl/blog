import{_ as s,o as n,c as a,e}from"./app-5e6e879c.js";const p={},t=e(`<h3 id="基本操作" tabindex="-1"><a class="header-anchor" href="#基本操作" aria-hidden="true">#</a> 基本操作</h3><ol><li>与 &amp; 两个位都是 1 时，结果才为 1<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">1</span> <span class="token operator">&amp;</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token number">100</span> <span class="token operator">&amp;</span> <span class="token number">001</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token number">100</span> <span class="token operator">&amp;</span> <span class="token number">101</span> <span class="token operator">=</span> <span class="token number">100</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>或 | 两个位都是 0 时，结果才为 0，否则为 1<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 二进制</span>
<span class="token number">1</span> <span class="token operator">|</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">100</span> <span class="token operator">|</span> <span class="token number">001</span> <span class="token operator">=</span> <span class="token number">101</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>异或预算^ 两个位相同则为 0，不同则为 1<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 二进制</span>
<span class="token number">1</span> <span class="token operator">^</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token number">1</span> <span class="token operator">^</span> <span class="token number">0</span> <span class="token operator">=</span> <span class="token number">1</span>
<span class="token number">100</span> <span class="token operator">^</span> <span class="token number">001</span> <span class="token operator">=</span> <span class="token number">101</span>
<span class="token number">101</span> <span class="token operator">^</span> <span class="token number">001</span> <span class="token operator">=</span> <span class="token number">100</span>     <span class="token comment">// 如果这里是加法的话，末尾 1 + 1 应该等于 0， 并向前进 1</span>
                    <span class="token comment">// 异或运算中，这里只等于 0 ， 未向前进 1， 所以叫不进位加法</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>取反 ~<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 二进制</span>
<span class="token operator">~</span><span class="token number">1</span> <span class="token operator">=</span> <span class="token number">0</span>
<span class="token operator">~</span><span class="token number">0</span> <span class="token operator">=</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>左移运算 &lt;&lt; 左移 1 位相当于乘 2， 左移 n 位相当于乘 2 的 n 次方<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 二进制</span>
<span class="token number">101</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">1010</span>
<span class="token number">101</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">10100</span>

<span class="token comment">// 整型</span>
<span class="token number">3</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">6</span>
<span class="token number">3</span> <span class="token operator">&lt;&lt;</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">12</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>右移运算 &gt;&gt; 右移 1 位相当于除 2， 右移 n 位相当于除 2 的 n 次方，<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 二进制</span>
<span class="token number">1000</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">100</span>
<span class="token number">1000</span> <span class="token operator">&gt;&gt;</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">10</span>

<span class="token comment">// 整型</span>
<span class="token number">8</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span> <span class="token operator">=</span> <span class="token number">4</span>
<span class="token number">8</span> <span class="token operator">&gt;&gt;</span> <span class="token number">2</span> <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="相关问题" tabindex="-1"><a class="header-anchor" href="#相关问题" aria-hidden="true">#</a> 相关问题</h3><ol><li><p>判断奇数偶数</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">and_example</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">if</span> x <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;偶数&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> x <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;奇数&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>除2</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">average</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>
<span class="token keyword">return</span> <span class="token punctuation">(</span>m <span class="token operator">+</span> n<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol>`,4),o=[t];function l(r,c){return n(),a("div",null,o)}const u=s(p,[["render",l],["__file","bit-operation.html.vue"]]);export{u as default};
